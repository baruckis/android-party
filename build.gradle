// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    ext {

        gradle_version = '3.6.3'
        kotlin_version = '1.3.72'

        android_min_sdk_version = 21
        android_target_sdk_version = 29
        android_compile_sdk_version = 29
        android_build_tools_version = "29.0.3"

        // Libraries
        javax_inject_version = '1'          // The Javax Inject API.

        rx_java_version = '2.2.19'          // RxJava.
        rx_kotlin_version = '2.4.0'         // RxKotlin.

        okhttp_version = '4.7.1'            // OkHttp.
        retrofit_version = '2.8.2'          // Retrofit.

        // Testing
        mockito_version = '3.3.3'           // Mockito.


        domainDependencies = [
                javaxInject: "javax.inject:javax.inject:${javax_inject_version}",
                kotlin     : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}",
                rxJava     : "io.reactivex.rxjava2:rxjava:${rx_java_version}",
                rxKotlin   : "io.reactivex.rxjava2:rxkotlin:${rx_kotlin_version}"
        ]

        domainTestDependencies = [
                kotlinJUnit  : "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
                mockito      : "org.mockito:mockito-core:${mockito_version}"
        ]

        dataDependencies = [
                javaxInject: "javax.inject:javax.inject:${javax_inject_version}",
                kotlin     : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}",
                rxKotlin   : "io.reactivex.rxjava2:rxkotlin:${rx_kotlin_version}"
        ]

        dataTestDependencies = [
                kotlinJUnit  : "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
                mockito      : "org.mockito:mockito-core:${mockito_version}"
        ]

        remoteDependencies = [
                javaxInject      : "javax.inject:javax.inject:${javax_inject_version}",
                kotlin           : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}",
                okHttp           : "com.squareup.okhttp3:okhttp:${okhttp_version}",
                okHttpLogger     : "com.squareup.okhttp3:logging-interceptor:${okhttp_version}",
                rxKotlin         : "io.reactivex.rxjava2:rxkotlin:${rx_kotlin_version}",
                retrofit         : "com.squareup.retrofit2:retrofit:${retrofit_version}",
                retrofitAdapter  : "com.squareup.retrofit2:adapter-rxjava2:${retrofit_version}",
                retrofitConverter: "com.squareup.retrofit2:converter-gson:${retrofit_version}"
        ]

        remoteTestDependencies = [
                kotlinJUnit  : "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
                mockito      : "org.mockito:mockito-core:${mockito_version}"
        ]

        localDependencies = [
                javaxInject : "javax.inject:javax.inject:${javax_inject_version}",
                kotlin      : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}",
                rxKotlin    : "io.reactivex.rxjava2:rxkotlin:${rx_kotlin_version}"
        ]

        localTestDependencies = [
                kotlinJUnit  : "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
                mockito      : "org.mockito:mockito-core:${mockito_version}"
        ]

    }


    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradle_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
